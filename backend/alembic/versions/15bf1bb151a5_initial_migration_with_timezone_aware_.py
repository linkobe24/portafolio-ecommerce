"""Initial migration with timezone-aware timestamps

Revision ID: 15bf1bb151a5
Revises: 
Create Date: 2025-10-19 17:13:01.987533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '15bf1bb151a5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('rawg_id', sa.Integer(), nullable=False, comment='ID del juego en RAWG API'),
    sa.Column('slug', sa.String(length=255), nullable=False, comment='URL-friendly identifier'),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False, comment='Precio en USD'),
    sa.Column('stock', sa.Integer(), nullable=False, comment='Cantidad disponible en inventario'),
    sa.Column('image_url', sa.String(length=500), nullable=True, comment='Imagen principal del juego'),
    sa.Column('background_image', sa.String(length=500), nullable=True, comment='Imagen de fondo para detalles'),
    sa.Column('genres', sa.JSON(), nullable=True, comment="Lista de géneros: [{'id': 1, 'name': 'Action'}]"),
    sa.Column('platforms', sa.JSON(), nullable=True, comment='Plataformas disponibles'),
    sa.Column('rating', sa.Numeric(precision=3, scale=2), nullable=True, comment='Rating promedio (0-5)'),
    sa.Column('metacritic', sa.Integer(), nullable=True, comment='Score de Metacritic (0-100)'),
    sa.Column('released', sa.Date(), nullable=True, comment='Fecha de lanzamiento'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Si está disponible para compra'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_games_id'), 'games', ['id'], unique=False)
    op.create_index(op.f('ix_games_is_active'), 'games', ['is_active'], unique=False)
    op.create_index(op.f('ix_games_name'), 'games', ['name'], unique=False)
    op.create_index(op.f('ix_games_rawg_id'), 'games', ['rawg_id'], unique=True)
    op.create_index(op.f('ix_games_slug'), 'games', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='user_role'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('carts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_carts_user_id'), 'carts', ['user_id'], unique=True)
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False, comment='Número de orden único y legible'),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'CANCELLED', name='order_status'), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total de la orden en USD'),
    sa.Column('shipping_address', sa.JSON(), nullable=False, comment='Dirección de envío: {street, city, state, zip, country}'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_created_at'), 'orders', ['created_at'], unique=False)
    op.create_index(op.f('ix_orders_order_number'), 'orders', ['order_number'], unique=True)
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_table('cart_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cart_id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Cantidad de copias del juego'),
    sa.Column('price_at_addition', sa.Numeric(precision=10, scale=2), nullable=False, comment='Precio cuando se agregó al carrito (puede cambiar después)'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cart_items_cart_id'), 'cart_items', ['cart_id'], unique=False)
    op.create_index(op.f('ix_cart_items_game_id'), 'cart_items', ['game_id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Cantidad comprada'),
    sa.Column('price_at_purchase', sa.Numeric(precision=10, scale=2), nullable=False, comment='Precio al momento de compra (histórico, no cambia)'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_game_id'), 'order_items', ['game_id'], unique=False)
    op.create_index(op.f('ix_order_items_order_id'), 'order_items', ['order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_items_order_id'), table_name='order_items')
    op.drop_index(op.f('ix_order_items_game_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_cart_items_game_id'), table_name='cart_items')
    op.drop_index(op.f('ix_cart_items_cart_id'), table_name='cart_items')
    op.drop_table('cart_items')
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_created_at'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_carts_user_id'), table_name='carts')
    op.drop_table('carts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_games_slug'), table_name='games')
    op.drop_index(op.f('ix_games_rawg_id'), table_name='games')
    op.drop_index(op.f('ix_games_name'), table_name='games')
    op.drop_index(op.f('ix_games_is_active'), table_name='games')
    op.drop_index(op.f('ix_games_id'), table_name='games')
    op.drop_table('games')
    # ### end Alembic commands ###
